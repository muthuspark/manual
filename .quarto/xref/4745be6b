{"entries":[],"headings":["developer-manual-react-redux","what-is-redux","why-use-redux-with-react","core-concepts-state-actions-reducers","setting-up-a-react-redux-project","developer-manual-react-redux-1","redux-fundamentals","understanding-the-redux-store","creating-actions","writing-reducers","dispatching-actions","working-with-the-stores-getstate-subscribe-and-dispatch","developer-manual-react-redux-2","connecting-react-with-redux","introducing-the-provider-component","using-useselector-hook","using-usedispatch-hook","connect-function-legacy","understanding-mapstatetoprops-and-mapdispatchtoprops","developer-manual-react-redux-3","advanced-redux-techniques","asynchronous-actions-with-redux-thunk-or-sagas","handling-side-effects","implementing-middleware","working-with-forms","debugging-redux-applications","developer-manual-react-redux-4","state-management-strategies","normalizing-state","restructuring-reducers","optimizing-performance","data-fetching-strategies","developer-manual-react-redux-5","testing-react-redux-applications","unit-testing-components-and-reducers","integration-testing","snapshot-testing","testing-asynchronous-actions","developer-manual-react-redux-6","best-practices-and-patterns","organizing-redux-code","code-splitting-and-optimization","working-with-large-state-trees","maintaining-code-quality","developer-manual-react-redux-7","appendix","glossary-of-terms","troubleshooting-common-issues","further-resources-and-learning-materials"]}