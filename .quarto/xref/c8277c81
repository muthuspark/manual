{"entries":[],"headings":["what-is-less","why-use-less","less-vs.-css","setting-up-less","running-less","variables","declaring-variables","using-variables","variable-scope","variable-interpolation","mixins","defining-mixins","calling-mixins","mixins-with-arguments","named-arguments","default-values-for-arguments","mixins-and-variable-scope","functions","built-in-functions","user-defined-functions","function-arguments","returning-values-from-functions","operators","arithmetic-operators","logical-operators","comparison-operators","string-operators","nested-rules","nesting-selectors","advantages-of-nesting","best-practices-for-nesting","selectors","basic-selectors","combinators","pseudo-classes","pseudo-elements","attribute-selectors","extends","extending-selectors","extending-multiple-selectors","extends-and-inheritance","importing-files","using-import","file-paths","import-order","using-relative-and-absolute-paths","comments","single-line-comments","multi-line-comments","data-types","numbers","strings","colors","lists","maps","control-directives","if","else","for","each","while","javascript-integration","using-javascript-in-less","accessing-javascript-variables","advanced-techniques","creating-reusable-components","managing-large-less-projects","optimizing-less-code","debugging-less-code","best-practices","code-style-guidelines","maintaining-readability","writing-maintainable-less-code"]}